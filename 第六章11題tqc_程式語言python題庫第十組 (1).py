# -*- coding: utf-8 -*-
"""第六章11題TQC_程式語言python題庫(第十組).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/119oXOOftQ_RY4oce7eAaIfYYCI7WXsjD

綜合範例11 請撰寫一程式，將宣告好的整數串列(大小為5)傳遞給名為output(aList)的函式，此函示將以使用者的輸入初始化後，再將之回傳到主程式並輸出該串列。接著，主程式將該串列傳遞給名為max(aList)和min(aList)函式，並分別回傳後輸出aList的最大值(Max)和最小值(Min)。請不要使用系統提供的函式。
"""

輸入輸出:
(1)範例輸入:
   4
   5
   2
   -3
   9
(2)範例輸出:
   [4, 5, 2, -3, 9]
   Max = 9
   Min = -3

def output(aList):
    for i in range(len(aList)):
        aList[i] = eval(input())
    return aList

def max(aList):
    max_num = aList[0]
    for i in range(len(aList)):
        if aList[i] >max_num:
            max_num = aList[i]
    return max_num

def min(aList):
    min_num = aList[0]
    for i in range(len(aList)):
        if aList[i] <min_num:
            min_num = aList[i]
    return min_num

def main():
    lst = [0] * 5
    print(compute(lst))
    print("Max =", max(lst))
    print("Min =", min(lst))

main()

"""綜合範例12 請撰寫一程式，讓使用者輸入十個數字(不重複)至串列，並將該串列傳遞給名為compute()的函式，此函式接收一個串列lst和一個數字a(預設3)，並回傳lst中a個最大的數字。最後再將回傳結果輸出"""

輸入輸出:
(1)範例輸入:
   45
   89
   -3
   17
   92
   24
   38
   -23
   55
   10
(2)範例輸出:
   [45, 89, -3, 17, 92, 24, 38, -23, 55, 10]
   [92, 89, 55]

def compute(lst, a=3):
    lst.sort()
    ans = []
    for i in range(-1, -1*a-1, -1):
        ans.append(lst[i])
    return ans

def main():
   lst = []
   for i in range(10):
       num = eval(input())
       lst.append(num)
   print(lst)
   print(compute(lst))

main()

"""綜合範例13 是撰寫一程式，以lotto()產生大熱透號碼，並以main()函式呼叫五次lotto()函式，亦即產生五組大樂透號碼。請江的熱透號碼由大至小排序之"""

輸入輸出:
(1)範例輸入:
   無
(2)範例輸出:
   隨機跑出亂碼，課本僅供參考!!

import random
def lotto():
    lottoLst = []
    count = 0
    while count < 6:
        lottoNum = random.randint(1, 49)
        if lottoNum not in lottoLst:
            lottoLst.append(lottoNum)
            count += 1
    lottoLst.sort()
    print(lottoLst)

def main():
    for i in range(1, 6):
        lotto()

main()

"""綜合範例14 試撰寫一程式，以隨機亂數的方式產生100個介於1~1000的亂數，將它置放於randLst串列中，然後印出第二小的數和第二大的數"""

輸入輸出:
(1)範例輸入:
   無
(2)範例輸出:
       隨機跑出亂數，課本僅供參考!!

import random
randLst = []
for i in range(100):
    randNum = random.randint(1, 1000)
    randLst.append(randNum)

randLst.sort()
for j in range(1, 101):
    if j % 10 == 0:
        print('%4d'%(randLst[j-1]))
    else:
        print('%4d'%(randLst[j-1]), end = '')

print()
print(randLst[1])
print(randLst[len(randLst) - 2])

"""綜合範例15 承綜合範例14，這100個亂數不可以重複。"""

輸入輸出:
(1)範例輸入:
   無
(2)範例輸出:
       隨機跑出亂數，課本僅供參考!!

import random
randLst = []
count = 1
while count <= 100:
    randNum = random.randint(1, 1000)
    if randNum not in randLst:
        randLst.append(randNum)
        count += 1

randLst.sort()
for j in range(1, 101):
    if j % 10 == 0:
        print('%4d'%(randLst[j-1]))
    else:
        print('%4d'%(randLst[j-1]), end = '')
print()
print(randLst[1])
print(randLst[len(randLst) - 2])

"""習題1 試修改綜合範例9，在main()函式中輸入兩個2*2的矩陣元素值，然後將這兩個串列傳送給add()函式用以相加這兩個串列，以及show()函式用以將串列印出。"""

輸入與輸出樣本:
輸入:
 Enter matrix1:
 [1 1]: 3
 [1 2]: 5
 [2 1]: 7
 [2 2]: 5
 Enter matrix2:
 [1 1]: 6
 [1 2]: 9
 [2 1]: 8
 [2 2]: 3
 輸出:
  Matrix 1
    3  5
    7  5
  Matrix 2
    6  9
    8  3
  Sum of matrices
    9 14
   15  8

ROWS = 2
COLS = 2
def add(lst1, lst2):
    print('Sum of matrices')
    for i in range(ROWS):
        for j in range(COLS):
            print('%3d'%(lst1[i][j]+lst2[i][j]),end = '')
        print()

def show(alst):
    for i in range(ROWS):
        for j in range(COLS):
            print('%3d'%(alst[i][j]), end = '')
        print()

def main():
    mat1 = []
    mat2 = []
    print('Enter matrix1: ')
    for i in range(ROWS):
        mat1.append([])
        for j in range(COLS):
            print('[%d %d]: '%(i+1, j+1), end = '')
            mat1[i].append(eval(input()))

    print('Enter matrix2: ')
    for i in range(ROWS):
        mat2.append([])
        for j in range(COLS):
            print('[%d %d]: '%(i+1, j+1), end = '')
            mat2[i].append(eval(input()))

    print('Matrix 1')
    show(mat1)
    print('Matrix 2')
    show(mat2)

    add(mat1, mat2)

main()

"""習題2 請撰寫一程式，以習題1為參考樣本，在main()函式中輸入兩個2*2的矩陣元素值，然後將這兩個串列傳送multiply()函式用以相乘這兩個串列，以及利用show()函式將串列加以印出。"""

輸入與輸出樣本:
輸入:
 Enter matrix1:
 [1 1]: 1
 [1 2]: 2
 [2 1]: 3
 [2 2]: 4
 Enter matrix2:
 [1 1]: 5
 [1 2]: 6
 [2 1]: 7
 [2 2]: 8
 輸出:
  Matrix 1
    1  2
    3  4
  Matrix 2
    5  6
    7  8
  Sum of matrices
   19 22
   43 50

ROWS = 2
COLS = 2

def multiply(lst1, lst2):
    print('Sum of matrices')
    for i in range(ROWS):
        for j in range(COLS):
            print('%3d'%(lst1[i][0]*lst2[0][j]+lst1[i][1]*lst2[1][j]), end = '')
        print()

def show(alst):
    for i in range(ROWS):
        for j in range(COLS):
            print('%3d'%(alst[i][j]), end = '')
        print()

def main():
    mat1 = []
    mat2 = []
    print('Enter matrix1: ')
    for i in range(ROWS):
        mat1.append([])
        for j in range(COLS):
            print('[%d %d]: '%(i+1, j+1), end = '')
            mat1[i].append(eval(input()))
    
    print('Enter matrix2: ')
    for i in range(ROWS):
        mat2.append([])
        for j in range(COLS):
            print('[%d %d]: '%(i+1, j+1), end = '')
            mat2[i].append(eval(input()))

    print('Matrix 1')
    show(mat1)
    print('Matrix 2')
    show(mat2)

    multiply(mat1, mat2)

main()

"""習題3 是修改綜合範例15，在main()函式以隨機亂數的方式產生100個介於1~1000間的亂數，並置放於randLst串列中，然後將此串列傳送給maxAndmin()函式，找出此串列的第二大的數和第二小的數並加以印出。"""

輸入與輸出樣本:
輸入:
 無
輸出:
 隨機跑出亂數，課本僅供參考!!

import random
def maxAndMin(aLst):
    aLst.sort()
    for j in range(1, 101):
        if j % 10 == 0:
            print('%4d'%(aLst[j-1]))
        else:
            print('%4d'%(aLst[j-1]), end = '')

    print(aLst[1])
    print(aLst[len(aLst) - 2])

def main():
    randLst = []
    count = 1
    while count <= 100:
        randNum = random.randint(1, 1000)
        if randNum not in randLst:
           randLst.append(randNum)
           count += 1
    maxAndMin(randLst)

main()

"""習題4 式撰寫一程式，在main()函式輸入十筆資料於alst串列中，呼叫meanAndsd()函式，計算此十筆資料的平均數和標準差，最後將平均數和標準差回傳給main()加以印出。"""

輸入與輸出樣本:
輸入:
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
輸出:
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  mean = 5.50, standard deviation = 3.03

import math
def meanAndsd(lst):
    total = 0
    ss = 0
    for i in range(len(lst)):
        total += lst[i]
    mean = total / len(lst)
    for j in range(len(lst)):
        ss += (lst[j] - mean) ** 2
    sd = math.sqrt(ss / (len(lst)-1))
    return mean, sd

def main():
    alst = []
    for k in range(1, 11):
        num = eval(input())
        alst.append(num)
    print(alst)
    m, s = meanAndsd(alst)
    print('mean = %.2f, standard deviation = %.2f'%(m, s))

main()

"""習題5 修改綜合範例7，在main()函式中呼叫inputDate()函式，用以輸入三位同學各五筆Python的考試成績，並儲存於名為lst35的二維串列，接下來呼叫totAver()函式用以計算每位學生的總和和平均分數。"""

輸入與輸出樣本:
輸入:
 #1 student
 78
 89
 88
 70
 60
 #2 student
 90
 78
 66
 68
 78
 #3 student
 69
 97
 70
 89
 90
輸出:
 #1 student:
 sum = 385, average = 77.00

 #2 student:
 sum = 380, average = 76.00

 #3 student:
 sum = 415, average = 83.00

def inputData():
    lst35 = []
    for i in range(3):
        lst35.append([])
        print('#%d student'%(i+1))
        for j in range(5):
            score = eval(input())
            lst35[i].append(score)
    return lst35

def totAver(alst):
    for i in range(len(alst)):
        sum = 0
        average = 0.0
        for j in range(len(alst[0])):
            sum += alst[i][j]
            average = sum / 5
        print('#%d student:'%(i+1))
        print('sum = %d, average = %.2f'%(sum, average))
        print()

def main():
    lst35 = inputData()
    totAver(lst35)

main()

"""習題6 請撰寫一程式，讓使用者輸入兩個正整數a、b，其中a<=b，並將其傳遞給名為compute()的函式，該函式回傳從a到b內(含)所有Armstrong numbers的串列。最後再將回傳結果輸出。
提示:所謂的阿姆斯壯數(Armstrong number)指的是一個n位數的正整數，它的所有位數的n次方和恰好等於自己(如:1634=1^4+6^4+3^4+4^4)。
"""

輸入與輸出樣本:
輸入:
  20
  2000
輸出:
  153 370 371 407 1634

def compute(a, b):
    lst = []
    for i in range(a, b+1):
        num_len = len(str(i))
        tmp = 0

        for j in range(0, num_len):
            tmp += ((i//(10**j))%10)**num_len

        if i == tmp:
            lst.append(i)
    return lst

a = eval(input())
b = eval(input())

armstrong_list = compute(a, b)

for i in range(len(armstrong_list)):
    print (armstrong_list[i], end = '')